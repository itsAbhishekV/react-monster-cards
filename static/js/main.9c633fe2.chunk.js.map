{"version":3,"sources":["components/card-components/card.jsx","components/card-list-components/card-list.jsx","components/search-components/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","phone","email","CardList","map","Search","placeholder","change","type","onChange","App","state","monster","searchField","fetch","then","response","json","users","setState","this","Filtered","filter","toLowerCase","includes","items","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAY,OAAjB,UACI,qBAAKC,IAAM,UAAUC,IAAG,+BAA6BH,EAAMI,SAASC,GAA5C,4BACxB,mCAAOL,EAAMI,SAASE,KAAtB,OACA,mCAAON,EAAMI,SAASG,MAAtB,OACA,mCAAOP,EAAMI,SAASI,MAAtB,WCNCC,G,MAAW,SAACT,GAErB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMI,SAASM,KAAI,SAAAN,GAAQ,OACxB,cAAC,EAAD,CAAMA,SAAYA,WCLrBO,G,MAAS,SAAC,GAA+B,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,OACnC,OAEI,qBAAKZ,UAAY,SAAjB,SACI,uBAAOa,KAAO,SACdF,YAAeA,EACfG,SAAYF,QC6BTG,E,kDAhCX,aAAc,IAAD,8BACT,gBACKC,MAAQ,CACTC,QAAS,GACTC,YAAc,IAJT,E,qDAQb,WAAqB,IAAD,OAChBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAU,CAACP,QAASM,S,oBAI5C,WAAU,IAAD,SAE4BE,KAAKT,MAA9BC,EAFH,EAEGA,QAASC,EAFZ,EAEYA,YACXQ,EAAWT,EAAQU,QAAO,SAAAxB,GAAQ,OAAKA,EAASE,KAAKuB,cAAcC,SAASX,EAAYU,kBAE9F,OAEI,sBAAK5B,UAAY,MAAjB,UACI,oDACA,cAAC,EAAD,CAAQW,YAAc,kBAAkBC,OAAU,SAAAkB,GAAK,OAAI,EAAKN,SAAU,CAAEN,YAAaY,EAAMC,OAAOC,WACtG,cAAC,EAAD,CAAU7B,SAAauB,W,GA1BrBO,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9c633fe2.chunk.js","sourcesContent":["import React from 'react';\nimport './card.css';\n\n\nexport const Card = (props) => {\n    return (\n        <div className = \"card\">\n            <img alt = \"monster\" src = {`https://robohash.org/${ props.monsters.id }?set=set2&size=120x120`} />\n            <h2> { props.monsters.name } </h2>\n            <h5> { props.monsters.phone } </h5>\n            <h5> { props.monsters.email } </h5>\n        </div>\n    )\n}","import React from \"react\";\nimport { Card } from \"../card-components/card\";\nimport \"./card-list.css\";\n\nexport const CardList = (props) => {\n\n    return (\n        <div className=\"card-list\">\n            {props.monsters.map(monsters => \n                <Card monsters = {monsters} />\n                )}\n        </div>\n)\n}","import React from \"react\";\n\nimport './search.css';\n\nexport const Search = ( { placeholder, change } ) => {\n    return (\n\n        <div className = \"search\">\n            <input type = \"search\" \n            placeholder = {placeholder} \n            onChange = {change}  />\n        </div>\n\n    )\n\n}","import React from 'react';\nimport './App.css';\n// import { Search } from './components/search-components/search.jsx'\nimport {CardList} from \"./components/card-list-components/card-list.jsx\"\nimport { Search } from './components/search-components/search';\n\nclass App extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            monster: [],\n            searchField : ''\n        } \n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState( {monster: users} ))\n    }\n\n\n    render() {\n\n        const { monster, searchField } = this.state;\n        const Filtered = monster.filter(monsters =>  monsters.name.toLowerCase().includes(searchField.toLowerCase()) )\n\n        return (\n\n            <div className = \"App\">\n                <h1> Monsters Robolox </h1>\n                <Search placeholder = \"Search Monsters\" change = {items => this.setState( { searchField: items.target.value } )} />\n                <CardList monsters = { Filtered } />\n            </div>\n\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}